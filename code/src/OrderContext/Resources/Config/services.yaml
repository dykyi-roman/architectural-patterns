parameters:

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    OrderContext\:
        resource: '../../'
        exclude:
            - '../../Resources/'
            - '../../Presentation/Api/{Request, Response}/'
            - '../../Application/**/*{Command,Query}.php'
            - '../../DomainModel/{Dto,Event,Model,ValueObject,Exception}/'
            - '../../**/Tests/'
        tags: ['controller.service_arguments']

    # Repositories
    OrderContext\DomainModel\Repository\OrderWriteModelRepositoryInterface:
        alias: OrderContext\Infrastructure\Persistence\Doctrine\Repository\DoctrineOrderRepository

    OrderContext\Infrastructure\Persistence\Doctrine\Repository\DoctrineOrderRepository:
        arguments:
            $entityManager: '@doctrine.orm.default_entity_manager'

    OrderContext\DomainModel\Repository\OrderReadModelRepositoryInterface:
        class: OrderContext\Infrastructure\Repository\ElasticsearchOrderReadModelRepository

    # Event Store
    OrderContext\Infrastructure\EventStore\EventStoreInterface:
        class: OrderContext\Infrastructure\EventStore\PostgreSqlEventStore

    # Outbox
    OrderContext\Infrastructure\Outbox\OutboxPublisherInterface:
        class: OrderContext\Infrastructure\Outbox\OutboxPublisher

    # EventHandlers
    OrderContext\Infrastructure\EventStore\EventHandler\OrderCreatedEventHandler:
        tags: [ 'order.event_handler' ]

    OrderContext\Infrastructure\EventStore\EventHandler\OrderStatusChangedEventHandler:
        tags: [ 'order.event_handler' ]

    # Registering command handlers in the message bus
    OrderContext\Application\UseCases\CreateOrder\Command\CreateOrderCommandHandler:
        tags:
            - { name: 'messenger.message_handler', bus: 'command.bus' }

    OrderContext\Application\UseCases\ChangeOrderStatus\Command\ChangeOrderStatusCommandHandler:
        tags:
            - { name: 'messenger.message_handler', bus: 'command.bus' }

    # Registering Request Handlers in the Message Bus
    OrderContext\Application\UseCases\GetOrder\Query\GetOrderQueryHandler:
        tags:
            - { name: 'messenger.message_handler', bus: 'query.bus' }

    OrderContext\Application\UseCases\GetOrdersList\Query\GetOrdersListQueryHandler:
        tags:
            - { name: 'messenger.message_handler', bus: 'query.bus' }

    # Services
    OrderContext\Application\Service\OrderApplicationService: ~

    # Transaction Service
    OrderContext\Infrastructure\Transaction\TransactionServiceInterface:
        class: OrderContext\Infrastructure\Transaction\DoctrineTransactionService
        arguments:
            $connection: '@doctrine.dbal.default_connection'
